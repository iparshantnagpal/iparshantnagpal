{"version":3,"file":"static/js/381.a205f2c2.chunk.js","mappings":"6SAyDA,EA5CiB,SAACA,GAChB,OACE,+BACE,UAACC,EAAA,EAAD,YACE,gBAAKC,UAAU,WAAf,UACE,iBAAKA,UAAU,mBAAf,WACE,sCAGA,SAAC,KAAD,CAAMC,GAAG,iBAAT,UACE,UAAC,KAAD,gCACmB,SAAC,MAAD,eAKzB,gBAAKD,UAAU,sBAAf,UACE,SAACE,EAAA,EAAD,CAAKF,UAAU,OAAf,UACIF,EAAMK,WACNL,EAAMM,UACNN,EAAMM,SAASC,MAAM,EAAG,GAAGC,KAAI,SAACC,EAASC,GACvC,OACE,SAACC,EAAA,EAAD,WACE,SAAC,IAAD,CACEC,MAAOH,EAAQG,MACfC,MAAOJ,EAAQI,MACfC,SAAUL,EAAQK,SAClBC,QAASN,EAAQM,QACjBC,MAAOP,EAAQO,SANTN,gB,soECW5B,EAnCa,WACT,OAA8CO,EAAAA,EAAAA,KAAvCZ,EAAP,EAAOA,UAAWa,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,YAAaC,EAAtC,EAAsCA,KACtC,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOf,EAAP,KAAiBgB,EAAjB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAcND,EAAYE,GACZC,QAAQC,IAAI,mBAAmBF,KAEjC,CAACL,KAEI,UAAC,EAAAQ,SAAD,YACA,SAAC,EAAD,CACArB,SAAUA,EACVD,UAAWA,EACXa,MAAOA,EACPE,KAAMA,KAGN,SAAC,KAAD","sources":["components/Work/Projects/index.jsx","containers/Work/index.jsx"],"sourcesContent":["/**\n * Name : Projects \n * Description: Contains Project componenet\n */\n\nimport React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { BsArrowRight } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport { CustomButton, ProjectCard } from \"../../UIElements\";\n\n\n\nconst Projects = (props) => {\n  return (\n    <>\n      <Container>\n        <div className=\"projects\">\n          <div className=\"projects__header\"> \n            <h1>\n              Projects\n            </h1>\n            <Link to=\"/work/projects\">\n              <CustomButton>\n                See All Projects <BsArrowRight />\n              </CustomButton>\n            </Link>\n          </div>\n        </div>\n        <div className=\"projects__container\">\n          <Row className=\"mt-5\">\n            {!props.isLoading &&\n              props.projects &&\n              props.projects.slice(0, 3).map((project, i) => {\n                return (\n                  <Col key={i} >\n                    <ProjectCard\n                      title={project.title}\n                      image={project.image}\n                      repoName={project.repoName}\n                      liveUrl={project.liveUrl}\n                      techs={project.techs}\n                    />\n                  </Col>)\n\n              })\n\n            }\n          </Row>\n        </div>\n\n\n      </Container>\n\n    </>\n  )\n}\nexport default Projects;","/**\n * Name : Work\n * Description: Contains all my Project information \n */\nimport React , {Fragment, useEffect, useState } from \"react\";\n\nimport useHttpClient from \"../../common/hooks/http-hook\";\nimport Projects from \"../../components/Work/Projects\";\nimport WorkJson from \"./Work.json\"; \nimport { BackToTop } from \"../../components/UIElements\";\n\nconst Work = () => {\n    const {isLoading, error, sendRequest, show} = useHttpClient();\n    const [projects, setProjects] = useState([]);\n\n    useEffect(()=>{\n        const fetchData = async () => {\n          try {\n            console.log(\"responseDataresponseData\",process.env)\n           const responseData =  await sendRequest(\n            // \"https://itsrakesh-server.herokuapp.com/api/project/projects\"\n            // `${process.env.REACT_APP_BACKEND_URL}/project/projects`\n              );\n              console.log(\"responseDataresponseData\",responseData)\n           setProjects(responseData);   \n          } catch (err){\n\n          }\n        };\n        setProjects(WorkJson);  \n        console.log(\"WorkJsonWorkJson\",WorkJson)\n        // fetchData()\n    },[sendRequest])\n    \n    return(<Fragment>\n           <Projects\n           projects={projects}\n           isLoading={isLoading}\n           error={error}\n           show={show}\n\n           />\n           <BackToTop/>\n    </Fragment>)\n}\n\nexport default Work;"],"names":["props","Container","className","to","Row","isLoading","projects","slice","map","project","i","Col","title","image","repoName","liveUrl","techs","useHttpClient","error","sendRequest","show","useState","setProjects","useEffect","WorkJson","console","log","Fragment"],"sourceRoot":""}